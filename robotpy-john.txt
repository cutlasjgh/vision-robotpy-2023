
this file mostly a rehash of readme.md

mkdir robotpy
cd robotpy
conda create -n robotpy python=3.8
conda activate robotpy
pip3 install robotpy
git clone https://github.com/robotpy/robotpy-apriltag.git
cd robotpy-apriltag/
pip3 install robotpy_apriltag
pip3 install opencv-python
cd tests
pip install -r requirements.txt
conda install -c conda-forge gcc=12.1.0
pip3 install -U robotpy[cscore]
now test_detection.py works

i also did but i dont think needed:
robotpy-installer download robotpy
robotpy-installer download robotpy_apriltag
(I think that allows you to download then install to roborio actually per https://robotpy.readthedocs.io/en/stable/install/cscore.html#roborio-installation ) 

more notes:

load json of field
https://docs.photonvision.org/en/latest/docs/programming/photonlib/robot-pose-estimator.html

gettagPose
https://first.wpi.edu/wpilib/allwpilib/docs/beta/cpp/classfrc_1_1_april_tag_field_layout.html


//Forward Camera
cam = new PhotonCamera("testCamera");
//Cam mounted facing forward, half a meter forward of center, half a meter up from center.
Transform3d robotToCam = new Transform3d(new Translation3d(0.5, 0.0, 0.5), new Rotation3d(0,0,0)); 

// Construct PhotonPoseEstimator
PhotonPoseEstimator photonPoseEstimator = new PhotonPoseEstimator(aprilTagFieldLayout, PoseStrategy.CLOSEST_TO_REFERENCE_POSE, cam, robotToCam);


    #est.pos1 is a transform3d
    posrot = est.pose1.rotation() 
    postransl = est.pose1.translation() 

build a pose 
    #testpose3 = Pose3d(Translation3d(5,6,7), Rotation3d(0,0,0))

timestamping
  double imageCaptureTime = Timer.getFPGATimestamp() - res.getLatencyMillis() / 1000; 

camPose.transformBy(Constants.kCameraToRobot).toPose2d() #transforms camera location to robot location

Pose3d to 2d .toPose2d()

apriltags https://docs.wpilib.org/en/stable/docs/software/vision-processing/apriltag/apriltag-intro.html 

java build field json
https://www.chiefdelphi.com/t/tagtracker-for-apriltag-detection-and-pose-estimation/417559/12

set field to other orientation
OriginPosition  https://first.wpi.edu/wpilib/allwpilib/docs/beta/cpp/classfrc_1_1_april_tag_field_layout.html#a584d958402e9e741d7447da016b268d5

another good explanation of mapping april tags to real world coords step by step https://raceon.io/localization/

good images for apriltags into world https://dspace.cvut.cz/bitstream/handle/10467/73783/F3-BP-2017-Koleckar-David-BP_PI_Koleckar_Chudoba%2813133%29.pdf?sequence=-1&isAllowed=y

get timestamped pose to drive estimator  https://docs.photonvision.org/en/latest/docs/examples/simposeest.html

good paper but older https://ligerbots.org/docs/whitepapers/LigerBots_Vision_Whitepaper.pdf

photonvisionconstants https://github.com/PhotonVision/photonvision/blob/master/photonlib-java-examples/simposeest/src/main/java/frc/robot/Constants.java

love this explanation https://raceon.io/localization/ 
his code https://github.com/teddylew12/race_on_cv

WPIlib https://github.com/wpilibsuite/allwpilib
C++ Wpilib geometry
https://github.com/wpilibsuite/allwpilib/tree/main/wpimath/src/main/native/cpp/geometry
https://github.com/wpilibsuite/allwpilib/blob/main/wpimath/src/main/native/cpp/geometry/Pose3d.cpp
https://github.com/wpilibsuite/allwpilib/blob/main/wpimath/src/main/native/cpp/geometry/CoordinateAxis.cpp
more https://first.wpi.edu/wpilib/allwpilib/docs/development/cpp/classfrc_1_1_april_tag_field_layout.html 

WPIlib Apriltag C++ 
https://github.com/wpilibsuite/allwpilib/tree/main/apriltag/src/main/native/cpp
https://github.com/wpilibsuite/allwpilib/blob/main/apriltag/src/main/native/include/frc/apriltag/AprilTagFieldLayout.h


Photon vision stuff https://docs.photonvision.org/en/latest/docs/examples/simposeest.html
https://github.com/PhotonVision/photonvision/blob/master/photonlib-java-examples/src/main/java/org/photonlib/examples/simposeest/robot/DrivetrainPoseEstimator.java
https://github.com/PhotonVision/photonvision/blob/e58c27caa28ef35891f1c8a3ec267a87622432f1/photon-core/src/main/java/org/photonvision/common/util/math/MathUtils.java#L217
https://github.com/PhotonVision/photonvision/blob/e58c27caa28ef35891f1c8a3ec267a87622432f1/photon-lib/src/main/java/org/photonvision/PhotonPoseEstimator.java#L268


delphi examples
https://www.chiefdelphi.com/t/how-to-properly-perform-3d-transformations-using-wpilibmath-libraries/425357

https://www.chiefdelphi.com/t/photonvision-beta-2023-apriltags/415626/106



